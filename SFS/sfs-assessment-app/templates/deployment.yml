apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sfs-assessment-app.fullname" . }}
  labels:
    {{- include "sfs-assessment-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sfs-assessment-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sfs-assessment-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          # Health checks (assuming Spring Boot Actuator is enabled)
          env:
            # Environment variables from values.yaml (e.g., Plant Config, URLs)
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            # Secrets from values.yaml (e.g., Database Password)
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.SPRING_DATASOURCE_PASSWORD.secretName | quote }}
                  key: {{ .Values.secrets.SPRING_DATASOURCE_PASSWORD.secretKey | quote }}
          command: ["/bin/bash", "-c"]
          args:
            - java -jar /app.jar; while true; do sleep 3600; done

          resources:
            {{- toYaml .Values.resources | nindent 12 }}